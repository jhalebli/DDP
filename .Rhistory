mean(xvm)
var(xvm)
xvm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
b1 <- cor(x,y)*sd(y)/sd(x)
b0 <- mean(x) - b1 * mean(y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
help(mtcars)
lm(mpg ~ wt,data=mtcars)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y ~ x)
ggplot(mtcars$mpg ~ mtcars$am)
ggplot2(mtcars$mpg ~ mtcars$am)
library(ggplot2)
library(ggplot)
install.packages("ggplot2")
library(ggplot2)
ggplot2(mtcars$mpg ~ mtcars$am)
ggplot(mtcars$mpg ~ mtcars$am)
?ggplot
library(plyr)
summary(mtcars)
ggplot()
?ggplot
ggplot() + geom_point(data = mtcars, aes( x= am, y = mpg))
source('~/.active-rstudio-document', echo=TRUE)
?ggplot
source('~/.active-rstudio-document', echo=TRUE)
mean(mtcars$mpg[,mtcars$am=1])
mean(mtcars$mpg[,mtcars$am==1])
mean(mtcars$mpg[mtcars$am==1,])
mean(mtcars[mtcars$mpg,mtcars$am==1])
mean(mtcars[mtcars$am==1,mtcars$mpg])
mtcars
mean(mtcars[mtcars$am==1,mpg])
mean(mtcars[am==1,mpg])
mean(mtcars$mpg[am==1,])
mean(mtcars$mpg[ntcars$am==1,])
mean(mtcars$mpg[mtcars$am==1,])
mtcars$mpg
mean(mtcars$mpg)
which(mtcars$am == 1)
which(mtcars$am == 0)
cars_auto <- subset(mtcars,am==1)
cars_man <- subset(mtcars, am==0)
cars_auto
cars_man
mean(cars_auto$mpg)
mean(cars_man$mpg)
sd(cars_manmpg)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(mtcars, aes(x = factor(am))) + geom_bar(stat = "bin")
source('~/.active-rstudio-document', echo=TRUE)
meanmpg=tapply(mtcars$mpg, mtcars$am, mean))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library("knitr", lib.loc="~/R/win-library/3.1")
library("ggplot2", lib.loc="~/R/win-library/3.1")
library("highr", lib.loc="~/R/win-library/3.1")
library("plyr", lib.loc="~/R/win-library/3.1")
library("markdown", lib.loc="~/R/win-library/3.1")
library("graphics", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("utils", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("compiler", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("codetools", lib.loc="C:/Program Files/R/R-3.1.1/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.1.1/library")
plot(y,x)
abline(lm(y ~ x))
fit <- lm(y ~ x)
coef(fit)
plot(x,y)
abline(lm(y ~ x))
e <- resid(fit)
yhat <- predict(fit)
max(abs(e -(y-yhat)))
m a x ( a b s ( e   -   ( y   -   c o e f ( f i t ) [ 1 ]   -   c o e f ( f i t ) [ 2 ]   *   x ) ) )
n <- length(y)
beta1 <- cor(y,x) *sd(y) / sd(x)
beta0 <- mean(y) - beat1 * mean(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y -beta0 - beta1 *x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((xx-mean(x))^2)
ssx <- sum((x-mean(x))^2)
seBeta0 <- (1/n+mean(x)^2/ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0;
tBeta1 <- beta1/seBeta1;
source('~/.active-rstudio-document', echo=TRUE)
pBeta0 <- 2 * pt(abs(tBeta0), df = n-2, lower.tail=FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n-2, lower.tail=FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estiamte". "Std. Error", "t value", "P(>|t|)")
rownames(coefTable) <- c("(Intercept)", "x")
pBeta0 <- 2 * pt(abs(tBeta0), df = n-2, lower.tail=FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n-2, lower.tail=FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t|)")
rownames(coefTable) <- c("(Intercept)", "x")
View(coefTable)
summary(fit)$coefficients
sd(resid(fit))
resid(fit)
sqrt(sum(resid(fit^2) / (n-2)))
sqrt(sum(resid(fit)^2 / (n-2)))
y <- mtcars$mpg
x <- mtcars$wt
n <- length(y)
beta1 <- cor(y,x) *sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y -beta0 - beta1 *x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x-mean(x))^2)
seBeta0 <- (1/n+mean(x)^2/ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0;
tBeta1 <- beta1 / seBeta1;
pBeta0 <- 2 * pt(abs(tBeta0), df = n-2, lower.tail=FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n-2, lower.tail=FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t|)")
rownames(coefTable) <- c("(Intercept)", "x")
fit <- lm( y ~ x)
plot(x,y)
abline(lm(y ~ x))
mean(x)
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1,1) * qt(.975, df=fit$df) * sumCoef[2,2]
sumCoef[2,1] + c(-1,1) * qt(.975, df=fit$df) * sumCoef[2,2] + mean(x)
sumCoef[2,1] + c(-1,1) * qt(.975, df=fit$df) * sumCoef[2,2] + mean(y)
sumCoef[2,1] + c(1,-1) * qt(.975, df=fit$df) * sumCoef[2,2]
mean(x)
mean(y)
summary(mtcars)
fit <- lm(y ~ x)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1,1) + pt(.975, df= fit$df) * sumCoef[1,2]
sumCoef[2,1] + c(-1,1) + pt(.975, df= fit$df) * sumCoef[2,2]
sumCoef[2,1] + c(1,-1) + pt(.975, df= fit$df) * sumCoef[2,2]
plot(x,y)
abline(fit,lwd=2)
coefTable
summary(fit)$coefficients
sumCoef[2,1] + c(1,-1) + pt(.95, df= fit$df) * sumCoef[2,2]
y <- mtcars$mpg
x<-mtcars$wt
n <- length(y)
beta1 <- cor(y,x) *sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y -beta0 - beta1 *x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x-mean(x))^2)
seBeta0 <- (1/n+mean(x)^2/ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0;
tBeta1 <- beta1 / seBeta1;
pBeta0 <- 2 * pt(abs(tBeta0), df = n-2, lower.tail=FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n-2, lower.tail=FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t|)")
rownames(coefTable) <- c("(Intercept)", "x")
coefTable
summary(fit)$coefficients
fit=lm(mpg~wt, data=mtcars)
summary(fit)$coefficients
sumCoef<-summary(fit)$coefficients sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2]
sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2]
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
mean(mpg)
mean(mtcars$mpg)
xVals <- seq(min(x), max(x), by=.01)
yVals <- beta0 + beta1 * xVals
se1 <- sigma * sqrt(1/n+(xVals-mean(x))^2/ssx)
se2 <- sigma * sqrt(1+1/n+(xVals-mean(x))^2/ssx)
plot(x,y)
abline(fit,lwd=2)
lines(xVals,yVals+2*sel)
lines(xVals,yVals+2*se1)
lines(xVals,yVals-2*se1)
lines(xVals,yVals-2*se2)
lines(xVals,yVals+2*se2)
fit
newdata <- data.frame(wt=mean(mtcars$wt))
predict(fit,newdata,interval=("confidence"))
newdata <- data.frame(wt=3)
predict(fit,newdata,interval=("confidence"))
predict(fit,newdata,interval=("prediction"))
x <- mtcars$wt/2
fit
fit = lm(y~x)
fit
newdata <= data.frame(wt=1)
newdata <= data.frame(wt==1)
wt
newdata
newdata <- data.frame(wt==1)
newdata <- data.frame(wt=1)
predict(fit,newdata,interval=("prediction"))
fit
newdata
predict(fit,newdata,interval=("confidence"))
n <- length(y)
beta1 <- cor(y,x) *sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
e <- y -beta0 - beta1 *x
sigma <- sqrt(sum(e^2) / (n-2))
ssx <- sum((x-mean(x))^2)
seBeta0 <- (1/n+mean(x)^2/ssx) ^ .5 * sigma
seBeta1 <- sigma / sqrt(ssx)
tBeta0 <- beta0 / seBeta0;
tBeta1 <- beta1 / seBeta1;
pBeta0 <- 2 * pt(abs(tBeta0), df = n-2, lower.tail=FALSE)
pBeta1 <- 2 * pt(abs(tBeta1), df = n-2, lower.tail=FALSE)
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t|)")
rownames(coefTable) <- c("(Intercept)", "x")
sumCoef<-summary(fit)$coefficients sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2]
sumCoef<-summary(fit)$coefficients
sumCoef[1,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[1,2]
sumCoef[2,1]+c(-1,1)*qt(.975,df=fit$df)*sumCoef[2,2]
x <- mtcars$wt
fit <- lm(y~x)
anova(fit)
847.73/(847.73+278.32)
R1 <- 847.73/(847.73+278.32)
RS1 <- 847.73/(847.73+278.32)
fit1 <- lm(y~offset(x))
anova(fit1)
summary(fit)
summary(fit1)
fit <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit)
fit <- lm(mpg ~ I(wt) + factor(cyl), data = mtcars)
summary(fit)
plot(fit)
plot(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm( y~x)
plot(x,y,frame=FLASE, cex=2, pch=13, bg="lightlube", col="black")
plot(x,y,frame=FLASE, cex=2, pch=13, bg="lightblue", col="black")
plot(x,y,frame=FALSE, cex=2, pch=13, bg="lightblue", col="black")
hatvalues(fit)
dfbeta(fit)
round(dfbetas(fit)[1:5,2],3)
round(hatvalues(fit)[1:5,2],3)
round(hatvalues(fit)[1:5],3)
1/133.823
dfbeta(fit)
round(hatvalues(fit)[1:5],4)
fit<-lm(mpg~factor(cyl)+wt,data=mtcars)
fit1<-lm(mpg~factor(cyl)+wt+interaction(cyl,wt),data=mtcars)
anove(fit,fit1)
anova(fit,fit1)
lrtest(fit,fit1)
?lrtest
library(stats)
?lrtest
library(datasets)
require(stats)
require(graphics)
lrtest(fit,fit1)
abline(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm( y~x)
plot(x,y,frame=FALSE, cex=2, pch=13, bg="lightblue", col="black")
abline(fit)
hatvalue(fit)
hatvalues(fit)
dfbetas(fit)
resid(fit)
fit <- lm(mpg ~ I(wt) + factor(cyl), data = mtcars)
summary(fit)
fit1 <- lm(mpg ~ factor(cyl), data = mtcars)
summary(fit1)
fit <- lm(mpg ~ factor(am),data=mtcars)
summary(fit)
plot(fit)
plot(am,mpg,data=mtcars)
plot(mpg$am,mpg$mpg,data=mtcars)
plot(mtcars$am,mtcars$mpg)
fit1 <- lm(mpg ~ factor(am) - 1,data=mtcars)
summary(fit1)
plot(fit1)
?plot
fit <- lm(mpg ~ factor(am),data=mtcars)
fito <- lm(mpg ~ factor(am) - 1,data=mtcars)
plot(mtcars$am,mtcars$mpg,xlab="Transmission (1=automatic)",ylab="MPG",
bg="lightblue",col="black",ylim=c(0,35))
plot(fit)
fit <- lm(mpg ~ factor(am),data=mtcars)
fito <- lm(mpg ~ factor(am) - 1,data=mtcars)
plot(mtcars$am,mtcars$mpg,xlab="Transmission (1=automatic)",ylab="MPG",
bg="lightblue",col="black",ylim=c(0,35))
mtcars
data(mtcars)
fit <- lm(mpg ~ factor(mtcars$am), data=mtcars)
fito <- lm(mpg ~ factor(am) - 1, data=mtcars)
plot(mtcars$am,mtcars$mpg,xlab="Transmission (1=automatic)",ylab="MPG",
bg="lightblue",col="black",ylim=c(0,35))
abline(fit)
abline(fito)
summary(fit)
summary(fito)
plot(mtcars$am,resid(fit))
abline(h=0)
fitw <- lm(mpg ~ factor(am) + I(wt))
summary(fitw)
fitdisp <- lm(mpg ~ factor(am) + I(disp))
summary(fitdisp)
?mtcars
?abline
help(par)
library(downloader)
download("https://github.com/ramnathv/rCharts/archive/master.tar.gz", "rCharts.tar.gz")
install.packages("rCharts.tar.gz", repos = NULL, type = "source")
library(devtools)
install_github("ramnathv/rCharts@dev")
install.packages(c("formatR", "labeling", "markdown", "UsingR"))
install.packages("base64enc")
devtools::install_github('ramnathv/rCharts')
library(devtools)
install_github("rCharts","ramnathv")
install.packages("devtools")
devtools::install_github('ramnathv/rCharts')
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
dTable(airquality, sPaginationType = "full_numbers")
head(airquality)
airquality
d
library("devtools", lib.loc="~/R/win-library/3.1")
library(rCharts)
d
dTable(airquality, sPaginationType = "full_numbers")
runApp()
shiny::runApp('ShinyTest')
shiny::runApp('ShinyTest')
?getMethod
show
lm
dgamma
colSums
getMethod
getMethod(lm)
getMethod('lm')
getMethod(mean)
getMethod('mean')
mean
getMethod(getMethod)
getMethod('getMethod')
getMethod
getMethod('show')
showMethods('show')
getClass('show')
?shuttle
library('MASS')
?shuttle
shuttle
a<-shuttle$use[,use== 'auto']
a<-shuttle$use[,shuttle$use== 'auto']
a<-shuttle$use[shuttle$use== 'auto',]
a<-as.numeric(shuttle$use)
view(a)
show(a)
replace(a, a==2, 0)
sh_use <- replace(a, a==2, 0)
sh_use
a<-as.numeric(shuttle$wind)
sh_wind <- replace(a, a==2, 0)
mean(sh_wind)
mean(sh_use)
logAutoUse <- glm(sh_use ~ sh_wind,family="binomial")
summary(logAutoUse)
exp(logAutoUse$coeff)
exp(confint(logAutoUse))
sh_magn = as.numeric(shuttle$magn)
sh_magn
logAutoUse <- glm(sh_use ~ sh_wind + sh_magn,family="binomial")
logAutoUse1 <- glm(sh_use ~ sh_wind + sh_magn,family="binomial")
logAutoUse <- glm(sh_use ~ sh_wind,family="binomial")
summary(logAutoUse1)
exp(logAutoUse1$coeff)
sh_useinv <- sh_use
replace(sh_useinv, sh_useinv == 0, -1)
replace(sh_useinv, sh_useinv == 1, 0)
sh_useinv <- sh_use
sh_useinv
replace(sh_useinv, sh_useinv == 0, 2)
replace(sh_useinv, sh_useinv == 1, 0)
sh_useinv <- replace(sh_useinv, sh_useinv == 0, -1)
sh_useinv <- replace(sh_useinv, sh_useinv == 1, 0)
sh_useinv <- replace(sh_useinv, sh_useinv == -1, 0)
sh_use
sh_useinv
sh_useinv <- sh_use
sh_useinv <- replace(sh_useinv, sh_useinv == -1, 0)
sh_useinv
sh_useinv <- replace(sh_useinv, sh_useinv == 0, -1)
sh_useinv
sh_useinv <- replace(sh_useinv, sh_useinv == 1, 0)
sh_useinv
sh_useinv <- replace(sh_useinv, sh_useinv == -1, 1)
sh_useinv
logAutoUseInv <- glm(sh_useinv ~ sh_wind,family="binomial")
summary(logAutoUseInv)
exp(logAutoUse$coeff)
exp(logAutoUseInv$coeff)
b <- 1/.09686888
b
InstectSparys
InstectSprays
InsectSprays
spa <- InsectSpray[,InsectSpray$spray=='A']
spa <- InsectSprays[,InsectSprays$spray=='A']
spa <- InsectSprays[InsectSprays$spray=='A',]
spb <- InsectSprays[InsectSprays$spray=='B',]
View(spa)
View(spb)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(Y~x)
plot(y~x)
?data
data()
data(euro)
?euro
?iris
?longley
setwd("D:/rshome/DDP")
?worldmap
??worldmap
load("rworldmap")
library("rworldmap")
library(rworldmap)
install.packages("rworldmap")
library("rworldmap", lib.loc="~/R/win-library/3.1")
library("shiny", lib.loc="~/R/win-library/3.1")
library("slidify", lib.loc="~/R/win-library/3.1")
library("slidifyLibraries", lib.loc="~/R/win-library/3.1")
library("rmarkdown", lib.loc="~/R/win-library/3.1")
shiny::runApp()
read.csv('CTW\sz-wl-pov.xlsx')
read.csv('CTW\eglob-trade.xlsx')
read.csv('CTW\trust.xlsx')
setwd('D:\\rshome\\DDP')
read.csv('CTW\\sz-wl-pov.xlsx')
read.csv('CTW\\eglob-trade.xlsx')
read.csv('CTW\\trust.xlsx')
?read.xls
setwd('D:\\rshome\\DDP')
read.xls('CTW\\sz-wl-pov.csv')
setwd('D:\\rshome\\DDP')
read.csv('CTW\\sz-wl-pov.csv')
ctwdt <- read.csv('CTW\\sz-wl-pov.csv')
ctwdt.colnames <- c('country','ccode','region','population','gdp2011','gdp2012','gdpppp2011', 'gdppcap', 'hdi')
View(ctwdt)
ctwdt <- read.csv('CTW\\sz-wl-pov.csv')
ctwdt$colnames <- c('country','ccode','region','population','gdp2011','gdp2012','gdpppp2011', 'gdppcap', 'hdi')
ctwdt <- read.csv('CTW\\sz-wl-pov.csv')
ctwdt$rownames <- c('country','ccode','region','population','gdp2011','gdp2012','gdpppp2011', 'gdppcap', 'hdi')
colnames(ctwdt) <- c('country','ccode','region','population','gdp2011','gdp2012','gdpppp2011', 'gdppcap', 'hdi')
shiny::runApp()
ctwdt$rownames <- c('country','ccode','region','population','gdp2011','gdp2012','gdpppp2011', 'gdppcap', 'hdi')?read.csv
?read.csv
ctwdt <- read.csv('CTW\\sz-wl-pov2.csv')
colnames(ctwdt) <- c('country','ccode','region','population','gdp2011','gdp2012','gdpppp2011', 'gdppcap', 'hdi')
ctwdt <- read.csv('CTW\\sz-wl-pov2.csv',header=TRUE,sep=",", na.strings="n/a")
colnames(ctwdt) <- c('country','ccode','region','population','gdp2011','gdp2012','gdpppp2011', 'gdppcap', 'hdi')
shiny::runApp()
shiny::runApp()
shiny::runApp()
?plotxy
?plot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?par
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?shinyUI
shiny::runApp()
shiny::runApp()
